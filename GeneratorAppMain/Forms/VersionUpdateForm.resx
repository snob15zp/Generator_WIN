<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="resultPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>